/*
 * Created on 8 oct. 2016 ( Time 01:00:05 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.gardecote.entities;

import javax.persistence.*;
import java.io.Serializable;
import java.util.List;
import java.util.Date;
//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

/**
 * Persistent class for entity stored in table "quotaMarrees"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="qMarree", schema="dbo", catalog="DSPCM_DB" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="qMarree.countAll", query="SELECT COUNT(x) FROM qMarree x" )
} )
@IdClass(qMarreePK.class)
public class qMarree implements Serializable
{
    private static final long serialVersionUID = 1L;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="modeMaree", nullable=false, length=50)
    private enumModeMaree     modeMaree ;
    @Id
    @Column(name="refBase", nullable=false, length=50)
    private String     refBase   ;
    @Id
    @Column(name="Depart", nullable=false, length=10)
    private Date     depart       ;

    @Column(name="Retour", nullable=false, length=10)
    private Date     retour       ;

    @Column(name="NbrPages", nullable=false)
    private Integer    nbrpages     ;
    @Column(name="NumeroDebut", nullable=false)
    private String    numeroDebut     ;
    private enumTypeDoc typeDoc;


    @OneToOne
    private qConcession concession;

    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="qmarree", targetEntity=qPageCarnet.class)
    private List<qPageCarnet> pages;

    public enumTypeDoc getTypeDoc() {
        return typeDoc;
    }

    public void setTypeDoc(enumTypeDoc typeDoc) {
        this.typeDoc = typeDoc;
    }

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public qMarree()
    {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : RefConcession ( varchar ) 

    public String getNumeroDebut() {
        return numeroDebut;
    }

    public void setNumeroDebut(String numeroDebut) {
        this.numeroDebut = numeroDebut;
    }

    public qMarreePK  getqMareePK(){
    qMarreePK qMarree=new qMarreePK();
    qMarree.setDepart(this.depart);
    qMarree.setRefBase(this.refBase);
    return qMarree;
}

    public enumModeMaree getModeMaree() {
        return modeMaree;
    }

    public void setModeMaree(enumModeMaree modeMaree) {
        this.modeMaree = modeMaree;
    }

    public String getRefBase() {
        return refBase;
    }

    public void setRefBase(String refBase) {
        this.refBase = refBase;
    }

    //--- DATABASE MAPPING : Depart ( date )
    public void setDepart( Date depart )
    {
        this.depart = depart;
    }
    public Date getDepart()
    {
        return this.depart;
    }

    //--- DATABASE MAPPING : Retour ( date ) 
    public void setRetour( Date retour )
    {
        this.retour = retour;
    }
    public Date getRetour()
    {
        return this.retour;
    }

    //--- DATABASE MAPPING : NbrPages ( int ) 
    public void setNbrpages( Integer nbrpages )
    {
        this.nbrpages = nbrpages;
    }
    public Integer getNbrpages()
    {
        return this.nbrpages;
    }

    //--- DATABASE MAPPING : SegmentPeche ( varchar ) 

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------


    public qConcession getConcession() {
        return concession;
    }

    public void setConcession(qConcession concession) {
        this.concession = concession;
    }

    public List<qPageCarnet> getPages() {
        return pages;
    }

    public void setPages(List<qPageCarnet> pages) {
        this.pages = pages;
    }

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 

        sb.append("]:"); 

        sb.append("|");

        sb.append("|");
        sb.append(depart);
        sb.append("|");
        sb.append(retour);
        sb.append("|");
        sb.append(nbrpages);
        sb.append("|");

        return sb.toString(); 
    } 

}