/*
 * Created on 8 oct. 2016 ( Time 01:00:05 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.gardecote.entities;

import org.hibernate.annotations.DynamicUpdate;

import javax.persistence.*;
import java.io.Serializable;
import java.util.List;
import java.util.Date;
//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;
/**
 * Persistent class for entity stored in table "quotaMarrees"
 *
 * @author Telosys Tools Generator
 *
 */
@Entity
@DynamicUpdate
@DiscriminatorValue("MARREE")
// @Table(name="qMarree", schema="dbo", catalog="DSPCM_DB" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="qMarree.countAll", query="SELECT COUNT(x) FROM qMarree x" )
} )

public class qMarree extends qDoc implements Serializable
{
    private static final long serialVersionUID = 1L;
    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------
    private enumJP typeJP;
    private enumModePeche modeDocument;
    @OneToOne
    private  qTypeConcession typeConcessionLiee;
    @ManyToMany(targetEntity = qEnginPecheMar.class,cascade = CascadeType.ALL)
    @JoinTable(name = "qAssocMarreeEnginsBIS")
    private List<qEnginPecheMar> qEngins;
    @OneToMany(targetEntity=qPageMarree.class)
    @JoinTable(name = "qAssocMareesPagesBIS")
    private List<qPageMarree> pages;
    @OneToOne(targetEntity = qMarreeAnnexe.class,cascade = {CascadeType.MERGE})
    private qMarreeAnnexe marreeAnnexe;

    @Column(name="totalCaptures", nullable=false, length=10)
    private float totalCapturs;
    @Column(name="totalCongs", nullable=false, length=10)
    private float totalCong;
    @Column(name="totalNbrCaisses", nullable=false, length=10)
    private float nbrCaisse;

    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
   public qMarree() {
    }
//----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public qMarreeAnnexe getMarreeAnnexe() {
        return marreeAnnexe;
    }

    public void setMarreeAnnexe(qMarreeAnnexe marreeAnnexe) {
        this.marreeAnnexe = marreeAnnexe;
    }

    public qTypeConcession getTypeConcessionLiee() {
        return typeConcessionLiee;
    }

    public void setTypeConcessionLiee(qTypeConcession typeConcessionLiee) {
        this.typeConcessionLiee = typeConcessionLiee;
    }

    public static long getSerialVersionUID() {
        return serialVersionUID;
    }

    public enumModePeche getModeDocument() {
        return modeDocument;
    }

    public void setModeDocument(enumModePeche modeDocument) {
        this.modeDocument = modeDocument;
    }

    public qMarree(enumTypeDoc enumtypedoc, Date depart, Date retour, qSeq qseq, qNavireLegale qnavire, qUsine qusine, qConcession qconcess, enumJP typeJP, List<qEnginPecheMar> qEngins, List<qPageMarree> pages, float totalCapturs, float totCong, float nbrCaisse,enumModePeche modeDoc,qTypeConcession typeConcession) {
        super(enumtypedoc, depart, retour,qseq, qnavire,qusine,qconcess);
        this.typeJP = typeJP;
        this.qEngins = qEngins;
        this.pages = pages;
        this.totalCapturs=totalCapturs;
        this.totalCong=totCong;
        this.nbrCaisse=nbrCaisse;
        this.modeDocument=modeDoc;
        this.typeConcessionLiee=typeConcession;
    }

    public float getTotalCapturs() {
        return totalCapturs;
    }

    public void setTotalCapturs(float totalCapturs) {
        this.totalCapturs = totalCapturs;
    }

    public float getTotalCong() {
        return totalCong;
    }

    public void setTotalCong(float totalCong) {
        this.totalCong = totalCong;
    }

    public float getNbrCaisse() {
        return nbrCaisse;
    }

    public void setNbrCaisse(float nbrCaisse) {
        this.nbrCaisse = nbrCaisse;
    }

    //--- DATABASE MAPPING : Depart ( date )
   public enumJP getTypeJP() {
        return typeJP;
    }

    public void setTypeJP(enumJP typeJP) {
        this.typeJP = typeJP;
    }

    public List<qEnginPecheMar> getqEngins() {
        return qEngins;
    }

    public void setqEngins(List<qEnginPecheMar> qEngins) {
        this.qEngins = qEngins;
    }

    public List<qPageMarree> getPages() {
        return pages;
    }

    public void setPages(List<qPageMarree> pages) {
        this.pages = pages;
    }

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 

        sb.append("]:"); 

        sb.append("|");

        sb.append("|");


        sb.append("|");

        return sb.toString(); 
    } 

}