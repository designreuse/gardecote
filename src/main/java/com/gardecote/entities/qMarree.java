/*
 * Created on 8 oct. 2016 ( Time 01:00:05 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.gardecote.entities;

import javax.persistence.*;
import java.io.Serializable;
import java.util.List;
import java.util.Date;
//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

/**
 * Persistent class for entity stored in table "quotaMarrees"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@DiscriminatorValue("MARREE")
// @Table(name="qMarree", schema="dbo", catalog="DSPCM_DB" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="qMarree.countAll", query="SELECT COUNT(x) FROM qMarree x" )
} )

@IdClass(qDocPK.class)

public class qMarree extends qDoc implements Serializable
{
    private static final long serialVersionUID = 1L;
    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------

    @Column(name="Retour", nullable=false, length=10)
    private Date     retour       ;

    private qConcession qconcessionconcernee;


    private qCategRessource qcategconcernee;



    @OneToMany(mappedBy="qmarree", targetEntity=qPageMarree.class)
    private List<qPageMarree> pages;

    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------

    public qMarree(Date retour, qConcession qconcessionconcernee, qCategRessource qcategconcernee) {
        this.retour = retour;
        this.qconcessionconcernee = qconcessionconcernee;
        this.qcategconcernee = qcategconcernee;
    }

    public qMarree() {

    }

    public qMarree(Date retour, qConcession qconcessionconcernee) {
        this.retour = retour;
        this.qconcessionconcernee = qconcessionconcernee;
    }

    public qMarree(enumTypeDoc enumtypedoc, List<qSeq> qlistseq) {
        super(enumtypedoc, qlistseq);
    }

    public qMarree(enumTypeDoc enumtypedoc, List<qSeq> qlistseq, Date retour, qConcession qconcessionconcernee, qCategRessource qcategconcernee) {
        super(enumtypedoc, qlistseq);
        this.retour = retour;
        this.qconcessionconcernee = qconcessionconcernee;
        this.qcategconcernee = qcategconcernee;
    }
//----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------


    public qMarree(Date retour, qConcession qconcessionconcernee, qCategRessource qcategconcernee, List<qPageMarree> pages) {
        this.retour = retour;
        this.qconcessionconcernee = qconcessionconcernee;
        this.qcategconcernee = qcategconcernee;
        this.pages = pages;
    }

    public qMarree(enumTypeDoc enumtypedoc, List<qSeq> qlistseq, Date depart, Date retour, qConcession qconcessionconcernee, qRegistreNavire qnavire, qCategRessource qcategconcernee) {
        super(enumtypedoc, qlistseq);

        this.retour = retour;
        this.qconcessionconcernee = qconcessionconcernee;

        this.qcategconcernee = qcategconcernee;
    }




    //--- DATABASE MAPPING : Depart ( date )



    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 

        sb.append("]:"); 

        sb.append("|");

        sb.append("|");


        sb.append("|");

        return sb.toString(); 
    } 

}