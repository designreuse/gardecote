/*
 * Created on 8 oct. 2016 ( Time 01:00:05 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.gardecote.entities;

import org.hibernate.action.internal.OrphanRemovalAction;
import org.hibernate.annotations.Cascade;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import java.io.Serializable;
import java.util.List;
import java.util.Set;
//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;
/**
 * Persistent class for entity stored in table "quotaEspecesTypeConcession"
 *
 * @author Telosys Tools Generator
 *
 */
@Entity
@Table(name="qModelCaptures", schema="dbo", catalog="GCM11" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="qModelJP.countAll", query="SELECT COUNT(x) FROM qModelJP x" )
} )
@IdClass(qPrefixPK.class)
public class qModelJP implements Serializable
{
    private static final long serialVersionUID = 1L;
    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @NotNull
    @Column(name="prefixModel", nullable=false, length=5)
    private String prefix;
    @Id
    private enumTypeDoc typeDoc;
    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
	// "codeesp" (column "CodeEsp") is not defined by itself because used as FK in a link 
	// "typeconcession" (column "typeConcession") is not defined by itself because used as FK in a link 
    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToOne
    @NotNull
    private qPrefix qprefix;
    @ManyToMany(cascade ={CascadeType.ALL} , targetEntity =qEspeceTypee.class,fetch = FetchType.EAGER)
    @JoinTable(name = "qAssocModelEspeceTypee3BIS")
    @OrderBy("numOrdre ASC")
    private List<qEspeceTypee> especestypees;
   //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public qModelJP()
    {
		super();
    }

    public qModelJP(qPrefix qprefix, List<qEspeceTypee> especestypees) {
        this.prefix = qprefix.getPrefix();
        this.typeDoc=qprefix.getTypeDoc();
        this.qprefix=qprefix;
        this.especestypees = especestypees;
    }

public qPrefixPK getPrefixPK() {
    qPrefixPK pr=new qPrefixPK(this.prefix,this.typeDoc);
    return pr;
}
    public String getPrefix() {
        return prefix;
    }

    public void setPrefix(String prefix) {
        this.prefix = prefix;
    }

    public enumTypeDoc getTypeDoc() {
        return typeDoc;
    }

    public void setTypeDoc(enumTypeDoc typeDoc) {
        this.typeDoc = typeDoc;
    }

    public qPrefix getQprefix() {
        return qprefix;
    }

    public void setQprefix(qPrefix qprefix) {
        this.qprefix = qprefix;
    }

    public List<qEspeceTypee> getEspecestypees() {
        return especestypees;
    }

    public void setEspecestypees(List<qEspeceTypee> especestypees) {
        this.especestypees = especestypees;
    }
}