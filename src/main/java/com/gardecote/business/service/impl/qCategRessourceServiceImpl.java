/*
 * Created on 26 sept. 2016 ( Time 10:51:46 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.gardecote.business.service.impl;

import com.gardecote.business.service.qCapturesService;
import com.gardecote.data.repository.jpa.qCapturesRepository;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.ArrayList;
import java.util.List;
import com.gardecote.business.service.qCategRessourceService;
import com.gardecote.data.repository.jpa.qCategRessourceRepository;
import com.gardecote.entities.qCategRessourcePK;
/**
 * Implementation of ActivitebatService
 */
import com.gardecote.entities.qCategRessource;
@Service
@Transactional
public class qCategRessourceServiceImpl implements qCategRessourceService {

	@Autowired
	private qCategRessourceRepository qCategRessourceJpaRepository;

	
	@Override
	public qCategRessource findById(qCategRessourcePK idcapt) {
		qCategRessource qCaptures = qCategRessourceJpaRepository.findOne(idcapt);
		return qCaptures;
	}

	@Override
	public List<qCategRessource> findAll() {
		Iterable<qCategRessource> entities = qCategRessourceJpaRepository.findAll();
		List<qCategRessource> beans = new ArrayList<qCategRessource>();
		for(qCategRessource qCapture1 : entities) {
			beans.add(qCapture1);
		}
		return beans;
	}

	@Override
	public qCategRessource save(qCategRessource qcapture) {
		return update(qcapture) ;
	}

	@Override
	public qCategRessource create(qCategRessource qcapture) {
		qCategRessource qcaptureEntity = qCategRessourceJpaRepository.findOne(qcapture.getIdCR());
		if( qcaptureEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		//qcaptureEntity = new qCategRessource();
		qCategRessource qcaptureEntitySaved = qCategRessourceJpaRepository.save(qcapture);
		return qcaptureEntitySaved ;
	}

	@Override
	public qCategRessource update(qCategRessource qcapture) {
		qCategRessource qcaptureEntity = qCategRessourceJpaRepository.findOne(qcapture.getIdCR());
		qCategRessource qcaptureEntitySaved = qCategRessourceJpaRepository.save(qcaptureEntity);
		return qcaptureEntitySaved;
	}

	@Override
	public void delete(qCategRessourcePK idcapt) {
		qCategRessourceJpaRepository.delete(idcapt);
	}


	public qCategRessourceRepository getqCapturesJpaRepository() {
		return qCategRessourceJpaRepository;
	}

	public void setqCapturesJpaRepository(qCategRessourceRepository qCapturesJpaRepository) {
		this.qCategRessourceJpaRepository = qCapturesJpaRepository;
	}
}
