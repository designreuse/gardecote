/*
 * Created on 26 sept. 2016 ( Time 10:51:46 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.gardecote.business.service.impl;
import com.gardecote.business.service.qEspeceService;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

;

import com.gardecote.business.service.qEspeceTypeeService;
import com.gardecote.data.repository.jpa.qEspeceRepository;
import com.gardecote.data.repository.jpa.qEspeceTypeeRepository;
import com.gardecote.data.repository.jpa.qPageCarnetRepository;
import com.gardecote.entities.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of ChangmentactService
 */
@Service
@Transactional
public class qEspeceServiceImpl implements qEspeceService {

	@Autowired
	private qEspeceRepository changmentactJpaRepository;
	@Autowired
	private qEspeceTypeeService esptypeeRepository;


	@Override
	public qEspece findById(String idchact) {
		qEspece changmentactEntity = changmentactJpaRepository.findOne(idchact);
		return changmentactEntity;
	}

	@Override
	public List<qEspece> findAll() {
		Iterable<qEspece> entities = changmentactJpaRepository.findAll();
		List<qEspece> beans = new ArrayList<qEspece>();
		for(qEspece changmentactEntity : entities) {
			beans.add(changmentactEntity);
		}
		return beans;
	}

	@Override
	public qEspece save(qEspece changmentact) {

			return changmentactJpaRepository.save(changmentact) ;

	}


	@Override
	public qEspece create(qEspece changmentact) {


		qEspece changmentactEntitySaved = changmentactJpaRepository.save(changmentact);
		return changmentactEntitySaved;
	}

	@Override
	public qEspece update(qEspece changmentact) {
		qEspece changmentactEntity = changmentactJpaRepository.findOne(changmentact.getCodeEsp());
		qEspece changmentactEntitySaved=null;
      if(changmentactEntity!=null)
		changmentactEntitySaved = changmentactJpaRepository.save(changmentact);

		return changmentactEntitySaved;
	}

	@Override
	public Integer delete(String idchact) {
		// check if his esptypee linked  to models
		int j=0,returnedVal=1;
		List<qModelJP> mjp=null;
		qEspece curr=changmentactJpaRepository.findOne(idchact);
		if(curr.getQespecetypee().size()==0)
		{
			changmentactJpaRepository.delete(idchact);
			returnedVal=0;
		}
		else {
	for(qEspeceTypee espt:curr.getQespecetypee()) {
	    	mjp=esptypeeRepository.findModel(espt);
			if(mjp.size()!=0) j++;
	}
			if(j==0) {
				changmentactJpaRepository.delete(idchact);
				returnedVal=0;
			        }
	}
		// check if his esptypee used in captures or if it is used in traitements
return returnedVal;
	}

	public qEspeceRepository getChangmentactJpaRepository() {
		return changmentactJpaRepository;
	}

	public void setChangmentactJpaRepository(qEspeceRepository changmentactJpaRepository) {
		this.changmentactJpaRepository = changmentactJpaRepository;
	}


	@Override
	public Page<qEspece> getSuggEsp(String esp) {
		return changmentactJpaRepository.returnSuggPage(new PageRequest(0, 10),esp);
	}

}
