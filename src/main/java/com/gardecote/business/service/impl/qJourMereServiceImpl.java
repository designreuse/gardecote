/*
 * Created on 26 sept. 2016 ( Time 10:51:46 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.gardecote.business.service.impl;
import com.gardecote.business.service.qJourMereService;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import com.gardecote.data.repository.jpa.qJourMereRepository;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import com.gardecote.entities.qJourMere;
/**
 * Implementation of ClassinfractionsService
 */
@Service
@Transactional
public class qJourMereServiceImpl implements qJourMereService {

	@Resource
	private qJourMereRepository classinfractionsJpaRepository;

	
	
	@Override
	public qJourMere findById(Long codeClass) {
		qJourMere classinfractionsEntity = classinfractionsJpaRepository.findOne(codeClass);
		return classinfractionsEntity ;
	}

	@Override
	public List<qJourMere> findAll() {
		Iterable<qJourMere> entities = classinfractionsJpaRepository.findAll();
		List<qJourMere> beans = new ArrayList<qJourMere>();
		for(qJourMere classinfractionsEntity : entities) {
			beans.add(classinfractionsEntity);
		}
		return beans;
	}

	@Override
	public qJourMere save(qJourMere classinfractions) {
		return update(classinfractions) ;
	}

	@Override
	public qJourMere create(qJourMere classinfractions) {
		qJourMere classinfractionsEntity = classinfractionsJpaRepository.findOne(classinfractions.getIdJourMere());
		if( classinfractionsEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		classinfractionsEntity = new qJourMere();
		qJourMere classinfractionsEntitySaved = classinfractionsJpaRepository.save(classinfractionsEntity);
		return classinfractionsEntitySaved;
	}

	@Override
	public qJourMere update(qJourMere classinfractions) {
		qJourMere classinfractionsEntity = classinfractionsJpaRepository.findOne(classinfractions.getIdJourMere());
		qJourMere classinfractionsEntitySaved = classinfractionsJpaRepository.save(classinfractionsEntity);
		return classinfractionsEntitySaved;
	}

	@Override
	public void delete(Long codeClass) {
		classinfractionsJpaRepository.delete(codeClass);
	}

	public qJourMereRepository getClassinfractionsJpaRepository() {
		return classinfractionsJpaRepository;
	}

	public void setClassinfractionsJpaRepository(qJourMereRepository classinfractionsJpaRepository) {
		this.classinfractionsJpaRepository = classinfractionsJpaRepository;
	}

	
}
